
- name: Provision EC2 instances
  hosts: master
  gather_facts: no 
  tasks:
    - name: Create security group
      ec2_group:
        name: "{{ security_group_name }}"
        description: "Security group for EC2 instance"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0  # Allow SSH from anywhere
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0  # Allow HTTP from anywhere
          # Add more rules as needed for your application
    - name: Install Python3 and pip
      package:
        name:
          - python3
          - python3-pip
        state: latest

    - name: Install AWS CLI and Boto3
      pip:
        name:
          - boto3
          - awscli

    - name: Launch EC2 instance
      community.aws.ec2_instance:
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        security_group: "{{ security_group_name }}"
        wait: yes
        count: 1
        tags:
          Name: MyEC2Instance  # Example tag
      register: ec2_instance

    - name: Debug EC2 instance info
      debug:
        var: ec2_instance

    - name: Wait for instance to be in 'running' state
      wait_for:
        host: "{{ ec2_instance.instances[0].public_dns_name }}"
        port: 22
        state: started
        delay: 10
        timeout: 300

    - name: Attach EBS volume
      ec2_vol:
        region: "{{ region }}"
        instance: "{{ ec2_instance.instances[0].instance_id }}"
        device_name: "{{ volume_device_name }}"
        volume_size: "{{ volume_size_gb }}"
        delete_on_termination: yes
      register: attached_volume

    - name: Debug attached volume info
      debug:
        var: attached_volume

    - name: Add EC2 instance to inventory
      add_host:
        hostname: "{{ ec2_info.instances[0].public_ip_address }}"
        groups: master
